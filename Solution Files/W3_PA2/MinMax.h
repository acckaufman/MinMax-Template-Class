#pragma once
template <class T>
class MinMax
{
private:
	T value1;
	T value2;
public:
	//#######################################################################################################
	//Default constructor that sets the private member variables to 0.										#
	//#######################################################################################################
	MinMax()
	{
		value1 = 0;
		value2 = 0;
	}

	//#######################################################################################################
	//Default constructor that sets the private member variables based on parameters passed to function.	#
	//#######################################################################################################
	MinMax(T firstValue, T secondValue)
	{
		value1 = firstValue;
		value2 = secondValue;
	}

	//#######################################################################################################
	//Function to set member variable value1.																#
	//#######################################################################################################
	void setFirstValue(T val)
	{
		value1 = val;
	}

	//#######################################################################################################
	//Function to set member variable value2.																#
	//#######################################################################################################
	void setSecondValue(T val)
	{
		value2 = val;
	}

	//#######################################################################################################
	//Determines the lesser of value1 and value2, and returns the lower value.								#
	//#######################################################################################################
	T minimum()
	{
		if (value1 <= value2)
			return value1;
		else
			return value2;
	}

	//#######################################################################################################
	//Determines the greater of value1 and value2, and returns the higher value.							#
	//#######################################################################################################
	T maximum()
	{
		if (value1 >= value2)
			return value1;
		else
			return value2;
	}

	//#######################################################################################################
	//Destructor.																							#
	//#######################################################################################################
	~MinMax()
	{

	}
};

